SHELL = @SHELL@

top_srcdir = @top_srcdir@
package = @PACKAGE_NAME@-@PACKAGE_VERSION@

LIB_DEPENDS = @MEM_LIBDEP@ ${top_srcDir}/libaat/libaat.a

PRJ_NAME = @PACKAGE_NAME@

all: $(PRJ_NAME)/$(PRJ_NAME) install

$(PRJ_NAME)/$(PRJ_NAME): $(LIB_DEPENDS)
	@echo "-----------------------------"
	@echo "Attempting to compile $(PRJ_NAME)..."
	(cd $(PRJ_NAME) && make)
	@echo "Finished with $(PRJ_NAME)"
	@echo "-----------------------------"
	@echo ""

#####
# LIBRARIES
#####
@MEM_LIBDEP@: ${top_srcdir}/@MEM_NAME@/Makefile
	@echo "-----------------------------"
	@echo "Attempting to compile memwatch..."
	(cd ${top_srcdir}/@MEM_NAME@ && make)
	@echo "Finished with memwatch..."
	@echo "-----------------------------"
	@echo ""

${top_srcDir}/libaat/libaat.a: ${top_srcdir}/libaat/Makefile
	@echo "-----------------------------"
	@echo "Attempting to compile libaat..."
	(cd ${top_srcdir}/libaat && make)
	@echo "Finished with libaat..."
	@echo "-----------------------------"
	@echo ""

#####
# Configurables
#####
${top_srcdir}/@MEM_NAME@/Makefile: ${top_srcdir}/@MEM_NAME@/configure
	@echo "-----------------------------"
	@echo "Attempting to configure memwatch..."
	(cd ${top_srcdir}/@MEM_NAME@ && ./configure)
	@echo "-----------------------------"
	@echo ""

#####
# Regular targets
#####
install:
	@echo "-----------------------------"
	@echo "Attempting to install $(PRJ_NAME)..."
	(cd $(PRJ_NAME) && make install)
	@echo "Finished with install of $(PRJ_NAME)"
	@echo "-----------------------------"

clean: @MEM_CLEAN@
	- (cd libaat && make clean)
	- (cd $(PRJ_NAME) && make clean)

@MEM_CLEAN@:
	- (cd @MEM_NAME@ && make clean)

distclean: @MEM_DISTCLEAN@
	- (cd libaat && make distclean)
	- (cd $(PRJ_NAME) && make distclean)
	- rm -r -f *.bak config.log config.status Makefile autom4te.cache

@MEM_DISTCLEAN@:
	- (cd @MEM_NAME@ && make distclean)

DATA = basins.dta ebasins.dta hbasins.dta
CONFIG = configure.ac aclocal.m4 configure config.guess config.sub install-sh \
         Makefile.in config-win.sh config-debug.sh

dist: $(PRJ_NAME)/$(PRJ_NAME) install
	@if [ ! -d $(package) ]; then mkdir $(package); fi
	@cp ../NEWS $(package)
	@cp ../readme.txt $(package)
	@echo "Copying the compiled code."
	@if [ ! -d $(package)/bin ]; then mkdir $(package)/bin; fi
	@cp $(PRJ_NAME)/$(PRJ_NAME)$(EXEEXT) $(package)/bin
	@echo "Copying the basin specific data."
	@if [ ! -d $(package)/sloshbsn ]; then mkdir $(package)/sloshbsn; fi
	@for file in $(DATA); do cp ../sloshbsn/$$file $(package)/sloshbsn; done
	@echo "Copying the source code."
	@if [ ! -d $(package)/src ]; then mkdir $(package)/src; fi
	@for file in $(CONFIG); do cp $$file $(package)/src; done
	@if [ ! -d $(package)/src/libaat ]; then mkdir $(package)/src/libaat; fi
	@(cd libaat && make DIST_DIR=../$(package)/src/libaat dist)
	@if [ ! -d $(package)/src/$(PRJ_NAME) ]; then mkdir $(package)/src/$(PRJ_NAME); fi
	@(cd $(PRJ_NAME) && make DIST_DIR=../$(package)/src/$(PRJ_NAME) dist)
	@echo "Copying the test cases."
	@if [ ! -d $(package)/test ]; then mkdir $(package)/test; fi
	@if [ ! -d $(package)/test/answers ]; then mkdir $(package)/test/answers; fi
	@if [ ! -d $(package)/test/answers/style0 ]; then mkdir $(package)/test/answers/style0; fi
	@for file in `ls ../test/answers/style0/*`; do cp $$file ./$(package)/test/answers/style0; done
	@if [ ! -d $(package)/test/answers/style1 ]; then mkdir $(package)/test/answers/style1; fi
	@for file in `ls ../test/answers/style1/*`; do cp $$file ./$(package)/test/answers/style1; done
	@if [ ! -d $(package)/test/answers/style2 ]; then mkdir $(package)/test/answers/style2; fi
	@for file in `ls ../test/answers/style2/*`; do cp $$file ./$(package)/test/answers/style2; done
	@if [ ! -d $(package)/test/pts ]; then mkdir $(package)/test/pts; fi
	@for file in `ls ../test/pts/*`; do cp $$file ./$(package)/test/pts; done
	@if [ ! -d $(package)/test/rexfiles ]; then mkdir $(package)/test/rexfiles; fi
	@for file in `ls ../test/rexfiles/*`; do cp $$file ./$(package)/test/rexfiles; done
	@cp ../test/makefile-1.1 ./$(package)/test
	@cp ../test/makefile-1.2 ./$(package)/test
	@cp ../test/makefile ./$(package)/test
	tar -cf $(package).tar ./$(package)
	gzip $(package).tar
	rm -r -f $(package)
	@echo "Finished packaging $(package).tar.gz"
